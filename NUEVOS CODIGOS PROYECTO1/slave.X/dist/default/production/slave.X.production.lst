

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon May 11 21:45:16 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  0006                     _PORTB	set	6
   369  0008                     _PORTDbits	set	8
   370  0007                     _PORTCbits	set	7
   371  0019                     _TXREG	set	25
   372  001A                     _RCREG	set	26
   373  0065                     _RCIF	set	101
   374  00C4                     _CREN	set	196
   375  00C7                     _SPEN	set	199
   376  0094                     _SSPSTATbits	set	148
   377  0094                     _SSPSTAT	set	148
   378  0086                     _TRISB	set	134
   379  0088                     _TRISDbits	set	136
   380  0099                     _SPBRG	set	153
   381  043B                     _TRISC3	set	1083
   382  043D                     _TRISC5	set	1085
   383  043A                     _TRISC2	set	1082
   384  04C1                     _TRMT	set	1217
   385  04C5                     _TXEN	set	1221
   386  043E                     _TRISC6	set	1086
   387  043F                     _TRISC7	set	1087
   388  04C4                     _SYNC	set	1220
   389  04C2                     _BRGH	set	1218
   390  0189                     _ANSELH	set	393
   391  0188                     _ANSEL	set	392
   392                           
   393                           	psect	strings
   394  0003                     __pstrings:	
   395  0003                     stringtab:	
   396  0003                     __stringtab:	
   397  0003                     stringcode:	
   398                           ;	String table - string pointers are 1 byte each
   399                           
   400  0003                     stringdir:	
   401  0003  3000               	movlw	high stringdir
   402  0004  008A               	movwf	10
   403  0005  0804               	movf	4,w
   404  0006  0A84               	incf	4,f
   405  0007  0782               	addwf	2,f
   406  0008                     __stringbase:	
   407  0008  3400               	retlw	0
   408  0009                     __end_of__stringtab:	
   409  0009                     STR_1:	
   410  0009  3430               	retlw	48	;'0'
   411  000A  3430               	retlw	48	;'0'
   412  000B  3400               	retlw	0
   413  000C                     STR_11:	
   414  000C  3431               	retlw	49	;'1'
   415  000D  3430               	retlw	48	;'0'
   416  000E  3400               	retlw	0
   417  000F                     STR_2:	
   418  000F  3430               	retlw	48	;'0'
   419  0010  3431               	retlw	49	;'1'
   420  0011  3400               	retlw	0
   421  0012                     STR_12:	
   422  0012  3431               	retlw	49	;'1'
   423  0013  3431               	retlw	49	;'1'
   424  0014  3400               	retlw	0
   425  0015                     STR_3:	
   426  0015  3430               	retlw	48	;'0'
   427  0016  3432               	retlw	50	;'2'
   428  0017  3400               	retlw	0
   429  0018                     STR_13:	
   430  0018  3431               	retlw	49	;'1'
   431  0019  3432               	retlw	50	;'2'
   432  001A  3400               	retlw	0
   433  001B                     STR_4:	
   434  001B  3430               	retlw	48	;'0'
   435  001C  3433               	retlw	51	;'3'
   436  001D  3400               	retlw	0
   437  001E                     STR_14:	
   438  001E  3431               	retlw	49	;'1'
   439  001F  3433               	retlw	51	;'3'
   440  0020  3400               	retlw	0
   441  0021                     STR_5:	
   442  0021  3430               	retlw	48	;'0'
   443  0022  3434               	retlw	52	;'4'
   444  0023  3400               	retlw	0
   445  0024                     STR_15:	
   446  0024  3431               	retlw	49	;'1'
   447  0025  3434               	retlw	52	;'4'
   448  0026  3400               	retlw	0
   449  0027                     STR_6:	
   450  0027  3430               	retlw	48	;'0'
   451  0028  3435               	retlw	53	;'5'
   452  0029  3400               	retlw	0
   453  002A                     STR_16:	
   454  002A  3431               	retlw	49	;'1'
   455  002B  3435               	retlw	53	;'5'
   456  002C  3400               	retlw	0
   457  002D                     STR_7:	
   458  002D  3430               	retlw	48	;'0'
   459  002E  3436               	retlw	54	;'6'
   460  002F  3400               	retlw	0
   461  0030                     STR_17:	
   462  0030  3431               	retlw	49	;'1'
   463  0031  3436               	retlw	54	;'6'
   464  0032  3400               	retlw	0
   465  0033                     STR_8:	
   466  0033  3430               	retlw	48	;'0'
   467  0034  3437               	retlw	55	;'7'
   468  0035  3400               	retlw	0
   469  0036                     STR_9:	
   470  0036  3430               	retlw	48	;'0'
   471  0037  3438               	retlw	56	;'8'
   472  0038  3400               	retlw	0
   473  0039                     STR_10:	
   474  0039  3430               	retlw	48	;'0'
   475  003A  3439               	retlw	57	;'9'
   476  003B  3400               	retlw	0
   477  000A                     
   478                           ; #config settings
   479  0000                     
   480                           	psect	cinit
   481  07F3                     start_initialization:	
   482  07F3                     __initialization:	
   483                           
   484                           ; Clear objects allocated to BANK0
   485  07F3  1383               	bcf	3,7	;select IRP bank0
   486  07F4  3020               	movlw	low __pbssBANK0
   487  07F5  0084               	movwf	4
   488  07F6  303C               	movlw	low (__pbssBANK0+28)
   489  07F7  120A  118A  25A8  120A  118A  	fcall	clear_ram0
   490  07FC                     end_of_initialization:	
   491                           ;End of C runtime variable initialization code
   492                           
   493  07FC                     __end_of__initialization:	
   494  07FC  0183               	clrf	3
   495  07FD  120A  118A  2E77   	ljmp	_main	;jump to C main() function
   496                           
   497                           	psect	bssBANK0
   498  0020                     __pbssBANK0:	
   499  0020                     FOTORESIS@F1358:	
   500  0020                     	ds	6
   501  0026                     POTENCIOMETRO@F1348:	
   502  0026                     	ds	6
   503  002C                     _dus:	
   504  002C                     	ds	2
   505  002E                     _dms:	
   506  002E                     	ds	2
   507  0030                     _b:	
   508  0030                     	ds	2
   509  0032                     _OTRO:	
   510  0032                     	ds	2
   511  0034                     _CONT:	
   512  0034                     	ds	2
   513  0036                     _FOTO:	
   514  0036                     	ds	2
   515  0038                     _POT:	
   516  0038                     	ds	2
   517  003A                     _a:	
   518  003A                     	ds	2
   519                           
   520                           	psect	clrtext
   521  05A8                     clear_ram0:	
   522                           ;	Called with FSR containing the base address, and
   523                           ;	W with the last address+1
   524                           
   525  05A8  0064               	clrwdt	;clear the watchdog before getting into this loop
   526  05A9                     clrloop0:	
   527  05A9  0180               	clrf	0	;clear RAM location pointed to by FSR
   528  05AA  0A84               	incf	4,f	;increment pointer
   529  05AB  0604               	xorwf	4,w	;XOR with final address
   530  05AC  1903               	btfsc	3,2	;have we reached the end yet?
   531  05AD  3400               	retlw	0	;all done for this memory range, return
   532  05AE  0604               	xorwf	4,w	;XOR again to restore value
   533  05AF  2DA9               	goto	clrloop0	;do the next byte
   534                           
   535                           	psect	cstackCOMMON
   536  0070                     __pcstackCOMMON:	
   537  0070                     ?_spiInit:	
   538  0070                     ?_spiWrite:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ??_spiWrite:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_UART_Data_Ready:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ??_UART_Data_Ready:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_UART_Read:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ??_UART_Read:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_setup:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_main:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?___aldiv:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     spiInit@sDataSample:	
   566                           ; 4 bytes @ 0x0
   567                           
   568  0070                     spiWrite@dat:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ___aldiv@divisor:	
   572                           ; 1 bytes @ 0x0
   573                           
   574                           
   575                           ; 4 bytes @ 0x0
   576  0070                     	ds	1
   577  0071                     spiInit@sClockIdle:	
   578                           
   579                           ; 1 bytes @ 0x1
   580  0071                     	ds	1
   581  0072                     spiInit@sTransmitEdge:	
   582                           
   583                           ; 1 bytes @ 0x2
   584  0072                     	ds	1
   585  0073                     ??_spiInit:	
   586  0073                     spiInit@sType:	
   587                           ; 1 bytes @ 0x3
   588                           
   589                           
   590                           ; 1 bytes @ 0x3
   591  0073                     	ds	1
   592  0074                     ??_setup:	
   593  0074                     ___aldiv@dividend:	
   594                           ; 1 bytes @ 0x4
   595                           
   596                           
   597                           ; 4 bytes @ 0x4
   598  0074                     	ds	4
   599  0078                     ??___aldiv:	
   600                           
   601                           ; 1 bytes @ 0x8
   602  0078                     	ds	1
   603  0079                     UART_Init@x:	
   604                           
   605                           ; 2 bytes @ 0x9
   606  0079                     	ds	2
   607  007B                     ??_main:	
   608                           
   609                           ; 1 bytes @ 0xB
   610  007B                     	ds	3
   611                           
   612                           	psect	cstackBANK0
   613  003C                     __pcstackBANK0:	
   614  003C                     ___aldiv@counter:	
   615                           
   616                           ; 1 bytes @ 0x0
   617  003C                     	ds	1
   618  003D                     ___aldiv@sign:	
   619                           
   620                           ; 1 bytes @ 0x1
   621  003D                     	ds	1
   622  003E                     ___aldiv@quotient:	
   623                           
   624                           ; 4 bytes @ 0x2
   625  003E                     	ds	4
   626  0042                     ?_UART_Init:	
   627  0042                     UART_Init@baudrate:	
   628                           ; 1 bytes @ 0x6
   629                           
   630                           
   631                           ; 4 bytes @ 0x6
   632  0042                     	ds	4
   633  0046                     ??_UART_Init:	
   634                           
   635                           ; 1 bytes @ 0xA
   636  0046                     	ds	12
   637                           
   638                           	psect	maintext
   639  0677                     __pmaintext:	
   640 ;;
   641 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   642 ;;
   643 ;; *************** function _main *****************
   644 ;; Defined at:
   645 ;;		line 45 in file "slave.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0, pclath, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : B00/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0
   661 ;;      Temps:          3       0       0       0       0
   662 ;;      Totals:         3       0       0       0       0
   663 ;;Total ram usage:        3 bytes
   664 ;; Hardware stack levels required when called:    2
   665 ;; This function calls:
   666 ;;		_UART_Data_Ready
   667 ;;		_UART_Init
   668 ;;		_UART_Read
   669 ;;		_setup
   670 ;;		_spiWrite
   671 ;; This function is called by:
   672 ;;		Startup code after reset
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _main
   678  0677                     _main:	
   679  0677                     l1503:	
   680                           ;incstack = 0
   681                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   682                           
   683                           
   684                           ;slave.c: 47: setup();
   685  0677  120A  118A  25B0  120A  118A  	fcall	_setup
   686                           
   687                           ;slave.c: 48:    UART_Init(9600);
   688  067C  3000               	movlw	0
   689  067D  1283               	bcf	3,5	;RP0=0, select bank0
   690  067E  1303               	bcf	3,6	;RP1=0, select bank0
   691  067F  00C5               	movwf	UART_Init@baudrate+3
   692  0680  3000               	movlw	0
   693  0681  00C4               	movwf	UART_Init@baudrate+2
   694  0682  3025               	movlw	37
   695  0683  00C3               	movwf	UART_Init@baudrate+1
   696  0684  3080               	movlw	128
   697  0685  00C2               	movwf	UART_Init@baudrate
   698  0686  120A  118A  2719  120A  118A  	fcall	_UART_Init
   699  068B                     l1505:	
   700                           
   701                           ;slave.c: 49:    b = 0;
   702  068B  1283               	bcf	3,5	;RP0=0, select bank0
   703  068C  1303               	bcf	3,6	;RP1=0, select bank0
   704  068D  01B0               	clrf	_b
   705  068E  01B1               	clrf	_b+1
   706  068F                     l1507:	
   707                           
   708                           ;slave.c: 52:       if(UART_Data_Ready()){
   709  068F  120A  118A  2594  120A  118A  	fcall	_UART_Data_Ready
   710  0694  3A00               	xorlw	0
   711  0695  1903               	skipnz
   712  0696  2E98               	goto	u911
   713  0697  2E99               	goto	u910
   714  0698                     u911:	
   715  0698  2EB3               	goto	l1513
   716  0699                     u910:	
   717  0699                     l1509:	
   718                           
   719                           ;slave.c: 53:         a = UART_Read();
   720  0699  120A  118A  25A0  120A  118A  	fcall	_UART_Read
   721  069E  00FB               	movwf	??_main
   722  069F  01FC               	clrf	??_main+1
   723  06A0  087B               	movf	??_main,w
   724  06A1  1283               	bcf	3,5	;RP0=0, select bank0
   725  06A2  1303               	bcf	3,6	;RP1=0, select bank0
   726  06A3  00BA               	movwf	_a
   727  06A4  087C               	movf	??_main+1,w
   728  06A5  00BB               	movwf	_a+1
   729  06A6                     l1511:	
   730                           
   731                           ;slave.c: 55:        _delay((unsigned long)((100)*(8000000/4000.0)));
   732  06A6  3002               	movlw	2
   733  06A7  00FD               	movwf	??_main+2
   734  06A8  3004               	movlw	4
   735  06A9  00FC               	movwf	??_main+1
   736  06AA  30BA               	movlw	186
   737  06AB  00FB               	movwf	??_main
   738  06AC                     u1477:	
   739  06AC  0BFB               	decfsz	??_main,f
   740  06AD  2EAC               	goto	u1477
   741  06AE  0BFC               	decfsz	??_main+1,f
   742  06AF  2EAC               	goto	u1477
   743  06B0  0BFD               	decfsz	??_main+2,f
   744  06B1  2EAC               	goto	u1477
   745  06B2  0000               	nop
   746  06B3                     l1513:	
   747                           
   748                           ;slave.c: 57:       if (b == 0){
   749  06B3  1283               	bcf	3,5	;RP0=0, select bank0
   750  06B4  1303               	bcf	3,6	;RP1=0, select bank0
   751  06B5  0830               	movf	_b,w
   752  06B6  0431               	iorwf	_b+1,w
   753  06B7  1D03               	btfss	3,2
   754  06B8  2EBA               	goto	u921
   755  06B9  2EBB               	goto	u920
   756  06BA                     u921:	
   757  06BA  2EC6               	goto	l1517
   758  06BB                     u920:	
   759  06BB                     l1515:	
   760                           
   761                           ;slave.c: 58:           POT = a;
   762  06BB  083B               	movf	_a+1,w
   763  06BC  00B9               	movwf	_POT+1
   764  06BD  083A               	movf	_a,w
   765  06BE  00B8               	movwf	_POT
   766                           
   767                           ;slave.c: 59:           b++;
   768  06BF  3001               	movlw	1
   769  06C0  07B0               	addwf	_b,f
   770  06C1  1803               	skipnc
   771  06C2  0AB1               	incf	_b+1,f
   772  06C3  3000               	movlw	0
   773  06C4  07B1               	addwf	_b+1,f
   774                           
   775                           ;slave.c: 60:       }
   776  06C5  2EF7               	goto	l1531
   777  06C6                     l1517:	
   778  06C6  0330               	decf	_b,w
   779  06C7  0431               	iorwf	_b+1,w
   780  06C8  1D03               	btfss	3,2
   781  06C9  2ECB               	goto	u931
   782  06CA  2ECC               	goto	u930
   783  06CB                     u931:	
   784  06CB  2ED7               	goto	l1521
   785  06CC                     u930:	
   786  06CC                     l1519:	
   787                           
   788                           ;slave.c: 62:           FOTO = a;
   789  06CC  083B               	movf	_a+1,w
   790  06CD  00B7               	movwf	_FOTO+1
   791  06CE  083A               	movf	_a,w
   792  06CF  00B6               	movwf	_FOTO
   793                           
   794                           ;slave.c: 63:           b++;
   795  06D0  3001               	movlw	1
   796  06D1  07B0               	addwf	_b,f
   797  06D2  1803               	skipnc
   798  06D3  0AB1               	incf	_b+1,f
   799  06D4  3000               	movlw	0
   800  06D5  07B1               	addwf	_b+1,f
   801                           
   802                           ;slave.c: 64:       }
   803  06D6  2EF7               	goto	l1531
   804  06D7                     l1521:	
   805  06D7  3002               	movlw	2
   806  06D8  0630               	xorwf	_b,w
   807  06D9  0431               	iorwf	_b+1,w
   808  06DA  1D03               	btfss	3,2
   809  06DB  2EDD               	goto	u941
   810  06DC  2EDE               	goto	u940
   811  06DD                     u941:	
   812  06DD  2EE9               	goto	l1525
   813  06DE                     u940:	
   814  06DE                     l1523:	
   815                           
   816                           ;slave.c: 66:           CONT = a;
   817  06DE  083B               	movf	_a+1,w
   818  06DF  00B5               	movwf	_CONT+1
   819  06E0  083A               	movf	_a,w
   820  06E1  00B4               	movwf	_CONT
   821                           
   822                           ;slave.c: 67:           b++;
   823  06E2  3001               	movlw	1
   824  06E3  07B0               	addwf	_b,f
   825  06E4  1803               	skipnc
   826  06E5  0AB1               	incf	_b+1,f
   827  06E6  3000               	movlw	0
   828  06E7  07B1               	addwf	_b+1,f
   829                           
   830                           ;slave.c: 68:       }
   831  06E8  2EF7               	goto	l1531
   832  06E9                     l1525:	
   833  06E9  3003               	movlw	3
   834  06EA  0630               	xorwf	_b,w
   835  06EB  0431               	iorwf	_b+1,w
   836  06EC  1D03               	btfss	3,2
   837  06ED  2EEF               	goto	u951
   838  06EE  2EF0               	goto	u950
   839  06EF                     u951:	
   840  06EF  2EF7               	goto	l98
   841  06F0                     u950:	
   842  06F0                     l1527:	
   843                           
   844                           ;slave.c: 70:           OTRO = a;
   845  06F0  083B               	movf	_a+1,w
   846  06F1  00B3               	movwf	_OTRO+1
   847  06F2  083A               	movf	_a,w
   848  06F3  00B2               	movwf	_OTRO
   849  06F4                     l1529:	
   850                           
   851                           ;slave.c: 71:           b = 0;
   852  06F4  01B0               	clrf	_b
   853  06F5  01B1               	clrf	_b+1
   854  06F6  2EF7               	goto	l1531
   855  06F7                     l98:	
   856  06F7                     l1531:	
   857                           
   858                           ;slave.c: 74:       PORTCbits.RC2 = 0;
   859  06F7  1107               	bcf	7,2	;volatile
   860  06F8                     l1533:	
   861                           
   862                           ;slave.c: 75:        _delay((unsigned long)((1)*(8000000/4000.0)));
   863  06F8  3003               	movlw	3
   864  06F9  00FC               	movwf	??_main+1
   865  06FA  3097               	movlw	151
   866  06FB  00FB               	movwf	??_main
   867  06FC                     u1487:	
   868  06FC  0BFB               	decfsz	??_main,f
   869  06FD  2EFC               	goto	u1487
   870  06FE  0BFC               	decfsz	??_main+1,f
   871  06FF  2EFC               	goto	u1487
   872  0700  2F01               	nop2
   873  0701                     l1535:	
   874                           
   875                           ;slave.c: 77:       spiWrite(a);
   876  0701  1283               	bcf	3,5	;RP0=0, select bank0
   877  0702  1303               	bcf	3,6	;RP1=0, select bank0
   878  0703  083A               	movf	_a,w
   879  0704  120A  118A  259A  120A  118A  	fcall	_spiWrite
   880  0709                     l1537:	
   881                           
   882                           ;slave.c: 79:        _delay((unsigned long)((1)*(8000000/4000.0)));
   883  0709  3003               	movlw	3
   884  070A  00FC               	movwf	??_main+1
   885  070B  3097               	movlw	151
   886  070C  00FB               	movwf	??_main
   887  070D                     u1497:	
   888  070D  0BFB               	decfsz	??_main,f
   889  070E  2F0D               	goto	u1497
   890  070F  0BFC               	decfsz	??_main+1,f
   891  0710  2F0D               	goto	u1497
   892  0711  2F12               	nop2
   893  0712                     l1539:	
   894                           
   895                           ;slave.c: 80:        PORTCbits.RC2 = 1;
   896  0712  1283               	bcf	3,5	;RP0=0, select bank0
   897  0713  1303               	bcf	3,6	;RP1=0, select bank0
   898  0714  1507               	bsf	7,2	;volatile
   899  0715  2E8F               	goto	l1507
   900  0716  120A  118A  2800   	ljmp	start
   901  0719                     __end_of_main:	
   902                           
   903                           	psect	text1
   904  059A                     __ptext1:	
   905 ;; *************** function _spiWrite *****************
   906 ;; Defined at:
   907 ;;		line 34 in file "SPI.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  dat             1    wreg     unsigned char 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  dat             1    0[COMMON] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         0       0       0       0       0
   922 ;;      Locals:         1       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0
   924 ;;      Totals:         1       0       0       0       0
   925 ;;Total ram usage:        1 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _spiWrite
   936  059A                     _spiWrite:	
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in _spiWrite: [wreg]
   940                           ;spiWrite@dat stored from wreg
   941  059A  00F0               	movwf	spiWrite@dat
   942  059B                     l1465:	
   943                           
   944                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   945  059B  0870               	movf	spiWrite@dat,w
   946  059C  1283               	bcf	3,5	;RP0=0, select bank0
   947  059D  1303               	bcf	3,6	;RP1=0, select bank0
   948  059E  0093               	movwf	19	;volatile
   949  059F                     l249:	
   950  059F  0008               	return
   951  05A0                     __end_of_spiWrite:	
   952                           
   953                           	psect	text2
   954  05B0                     __ptext2:	
   955 ;; *************** function _setup *****************
   956 ;; Defined at:
   957 ;;		line 36 in file "slave.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0
   974 ;;      Totals:         0       0       0       0       0
   975 ;;Total ram usage:        0 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    1
   978 ;; This function calls:
   979 ;;		_spiInit
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           
   986                           ;psect for function _setup
   987  05B0                     _setup:	
   988  05B0                     l1457:	
   989                           ;incstack = 0
   990                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   991                           
   992                           
   993                           ;slave.c: 37:     ANSEL = 0;
   994  05B0  1683               	bsf	3,5	;RP0=1, select bank3
   995  05B1  1703               	bsf	3,6	;RP1=1, select bank3
   996  05B2  0188               	clrf	8	;volatile
   997                           
   998                           ;slave.c: 38:     ANSELH = 0;
   999  05B3  0189               	clrf	9	;volatile
  1000  05B4                     l1459:	
  1001                           
  1002                           ;slave.c: 39:     TRISC2 = 0;
  1003  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  1004  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  1005  05B6  1107               	bcf	7,2	;volatile
  1006  05B7                     l1461:	
  1007                           
  1008                           ;slave.c: 41:     PORTCbits.RC2 = 1;
  1009  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1010  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1011  05B9  1507               	bsf	7,2	;volatile
  1012  05BA                     l1463:	
  1013                           
  1014                           ;slave.c: 42:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1015  05BA  01F0               	clrf	spiInit@sDataSample
  1016  05BB  01F1               	clrf	spiInit@sClockIdle
  1017  05BC  01F2               	clrf	spiInit@sTransmitEdge
  1018  05BD  3020               	movlw	32
  1019  05BE  120A  118A  25C4  120A  118A  	fcall	_spiInit
  1020  05C3                     l88:	
  1021  05C3  0008               	return
  1022  05C4                     __end_of_setup:	
  1023                           
  1024                           	psect	text3
  1025  05C4                     __ptext3:	
  1026 ;; *************** function _spiInit *****************
  1027 ;; Defined at:
  1028 ;;		line 12 in file "SPI.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  sType           1    wreg     enum E1264
  1031 ;;  sDataSample     1    0[COMMON] enum E1272
  1032 ;;  sClockIdle      1    1[COMMON] enum E1276
  1033 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  sType           1    3[COMMON] enum E1264
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         3       0       0       0       0
  1046 ;;      Locals:         1       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0
  1048 ;;      Totals:         4       0       0       0       0
  1049 ;;Total ram usage:        4 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_setup
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           
  1059                           ;psect for function _spiInit
  1060  05C4                     _spiInit:	
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1064                           ;spiInit@sType stored from wreg
  1065  05C4  00F3               	movwf	spiInit@sType
  1066  05C5                     l1343:	
  1067                           
  1068                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1069  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  1070  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  1071  05C7  1287               	bcf	7,5	;volatile
  1072                           
  1073                           ;SPI.c: 15:     if(sType & 0b00000100)
  1074  05C8  1D73               	btfss	spiInit@sType,2
  1075  05C9  2DCB               	goto	u671
  1076  05CA  2DCC               	goto	u670
  1077  05CB                     u671:	
  1078  05CB  2DD0               	goto	l1349
  1079  05CC                     u670:	
  1080  05CC                     l1345:	
  1081                           
  1082                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1083  05CC  0872               	movf	spiInit@sTransmitEdge,w
  1084  05CD  0094               	movwf	20	;volatile
  1085  05CE                     l1347:	
  1086                           
  1087                           ;SPI.c: 18:         TRISC3 = 1;
  1088  05CE  1587               	bsf	7,3	;volatile
  1089                           
  1090                           ;SPI.c: 19:     }
  1091  05CF  2DD4               	goto	l239
  1092  05D0                     l1349:	
  1093                           
  1094                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1095  05D0  0870               	movf	spiInit@sDataSample,w
  1096  05D1  0472               	iorwf	spiInit@sTransmitEdge,w
  1097  05D2  0094               	movwf	20	;volatile
  1098  05D3                     l1351:	
  1099                           
  1100                           ;SPI.c: 23:         TRISC3 = 0;
  1101  05D3  1187               	bcf	7,3	;volatile
  1102  05D4                     l239:	
  1103                           ;SPI.c: 24:     }
  1104                           
  1105                           
  1106                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1107  05D4  0873               	movf	spiInit@sType,w
  1108  05D5  0471               	iorwf	spiInit@sClockIdle,w
  1109  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1110  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1111  05D8  0094               	movwf	20	;volatile
  1112  05D9                     l240:	
  1113  05D9  0008               	return
  1114  05DA                     __end_of_spiInit:	
  1115                           
  1116                           	psect	text4
  1117  05A0                     __ptext4:	
  1118 ;; *************** function _UART_Read *****************
  1119 ;; Defined at:
  1120 ;;		line 33 in file "./uart.h"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      unsigned char 
  1127 ;; Registers used:
  1128 ;;		wreg
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;;		_UART_Read_Text
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _UART_Read
  1150  05A0                     _UART_Read:	
  1151  05A0                     l1451:	
  1152                           ;incstack = 0
  1153                           ; Regs used in _UART_Read: [wreg]
  1154                           
  1155  05A0                     l52:	
  1156                           ;./uart.h: 36:   while(!RCIF);
  1157                           
  1158  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  1159  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  1160  05A2  1E8C               	btfss	12,5	;volatile
  1161  05A3  2DA5               	goto	u891
  1162  05A4  2DA6               	goto	u890
  1163  05A5                     u891:	
  1164  05A5  2DA0               	goto	l52
  1165  05A6                     u890:	
  1166  05A6                     l1453:	
  1167                           
  1168                           ;./uart.h: 37:   return RCREG;
  1169  05A6  081A               	movf	26,w	;volatile
  1170  05A7                     l55:	
  1171  05A7  0008               	return
  1172  05A8                     __end_of_UART_Read:	
  1173                           
  1174                           	psect	text5
  1175  0719                     __ptext5:	
  1176 ;; *************** function _UART_Init *****************
  1177 ;; Defined at:
  1178 ;;		line 1 in file "./uart.h"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  baudrate        4    6[BANK0 ] const long 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  x               2    9[COMMON] unsigned int 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      unsigned char 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0, pclath, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         0       4       0       0       0
  1193 ;;      Locals:         2       0       0       0       0
  1194 ;;      Temps:          0      12       0       0       0
  1195 ;;      Totals:         2      16       0       0       0
  1196 ;;Total ram usage:       18 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    1
  1199 ;; This function calls:
  1200 ;;		___aldiv
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _UART_Init
  1208  0719                     _UART_Init:	
  1209  0719                     l1421:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1212                           
  1213                           
  1214                           ;./uart.h: 1: char UART_Init(const long int baudrate);./uart.h: 2: {;./uart.h: 3:  unsig
      +                          ned int x;;./uart.h: 4:  x = (8000000 - baudrate*64)/(baudrate*64);
  1215  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1216  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1217  071B  0842               	movf	UART_Init@baudrate,w
  1218  071C  00C6               	movwf	??_UART_Init
  1219  071D  0843               	movf	UART_Init@baudrate+1,w
  1220  071E  00C7               	movwf	??_UART_Init+1
  1221  071F  0844               	movf	UART_Init@baudrate+2,w
  1222  0720  00C8               	movwf	??_UART_Init+2
  1223  0721  0845               	movf	UART_Init@baudrate+3,w
  1224  0722  00C9               	movwf	??_UART_Init+3
  1225  0723  3006               	movlw	6
  1226  0724                     u815:	
  1227  0724  1003               	clrc
  1228  0725  0DC6               	rlf	??_UART_Init,f
  1229  0726  0DC7               	rlf	??_UART_Init+1,f
  1230  0727  0DC8               	rlf	??_UART_Init+2,f
  1231  0728  0DC9               	rlf	??_UART_Init+3,f
  1232  0729                     u810:	
  1233  0729  3EFF               	addlw	-1
  1234  072A  1D03               	skipz
  1235  072B  2F24               	goto	u815
  1236  072C  0849               	movf	??_UART_Init+3,w
  1237  072D  00F3               	movwf	___aldiv@divisor+3
  1238  072E  0848               	movf	??_UART_Init+2,w
  1239  072F  00F2               	movwf	___aldiv@divisor+2
  1240  0730  0847               	movf	??_UART_Init+1,w
  1241  0731  00F1               	movwf	___aldiv@divisor+1
  1242  0732  0846               	movf	??_UART_Init,w
  1243  0733  00F0               	movwf	___aldiv@divisor
  1244  0734  0842               	movf	UART_Init@baudrate,w
  1245  0735  00CA               	movwf	??_UART_Init+4
  1246  0736  0843               	movf	UART_Init@baudrate+1,w
  1247  0737  00CB               	movwf	??_UART_Init+5
  1248  0738  0844               	movf	UART_Init@baudrate+2,w
  1249  0739  00CC               	movwf	??_UART_Init+6
  1250  073A  0845               	movf	UART_Init@baudrate+3,w
  1251  073B  00CD               	movwf	??_UART_Init+7
  1252  073C  3006               	movlw	6
  1253  073D                     u825:	
  1254  073D  1003               	clrc
  1255  073E  0DCA               	rlf	??_UART_Init+4,f
  1256  073F  0DCB               	rlf	??_UART_Init+5,f
  1257  0740  0DCC               	rlf	??_UART_Init+6,f
  1258  0741  0DCD               	rlf	??_UART_Init+7,f
  1259  0742                     u820:	
  1260  0742  3EFF               	addlw	-1
  1261  0743  1D03               	skipz
  1262  0744  2F3D               	goto	u825
  1263  0745  3000               	movlw	0
  1264  0746  00CE               	movwf	??_UART_Init+8
  1265  0747  3012               	movlw	18
  1266  0748  00CF               	movwf	??_UART_Init+9
  1267  0749  307A               	movlw	122
  1268  074A  00D0               	movwf	??_UART_Init+10
  1269  074B  3000               	movlw	0
  1270  074C  00D1               	movwf	??_UART_Init+11
  1271  074D  084A               	movf	??_UART_Init+4,w
  1272  074E  02CE               	subwf	??_UART_Init+8,f
  1273  074F  084B               	movf	??_UART_Init+5,w
  1274  0750  1C03               	skipc
  1275  0751  0F4B               	incfsz	??_UART_Init+5,w
  1276  0752  2F54               	goto	u831
  1277  0753  2F55               	goto	u832
  1278  0754                     u831:	
  1279  0754  02CF               	subwf	??_UART_Init+9,f
  1280  0755                     u832:	
  1281  0755  084C               	movf	??_UART_Init+6,w
  1282  0756  1C03               	skipc
  1283  0757  0F4C               	incfsz	??_UART_Init+6,w
  1284  0758  2F5A               	goto	u833
  1285  0759  2F5B               	goto	u834
  1286  075A                     u833:	
  1287  075A  02D0               	subwf	??_UART_Init+10,f
  1288  075B                     u834:	
  1289  075B  084D               	movf	??_UART_Init+7,w
  1290  075C  1C03               	skipc
  1291  075D  0F4D               	incfsz	??_UART_Init+7,w
  1292  075E  2F60               	goto	u835
  1293  075F  2F61               	goto	u836
  1294  0760                     u835:	
  1295  0760  02D1               	subwf	??_UART_Init+11,f
  1296  0761                     u836:	
  1297  0761  0851               	movf	??_UART_Init+11,w
  1298  0762  00F7               	movwf	___aldiv@dividend+3
  1299  0763  0850               	movf	??_UART_Init+10,w
  1300  0764  00F6               	movwf	___aldiv@dividend+2
  1301  0765  084F               	movf	??_UART_Init+9,w
  1302  0766  00F5               	movwf	___aldiv@dividend+1
  1303  0767  084E               	movf	??_UART_Init+8,w
  1304  0768  00F4               	movwf	___aldiv@dividend
  1305  0769  120A  118A  25DA  120A  118A  	fcall	___aldiv
  1306  076E  0871               	movf	?___aldiv+1,w
  1307  076F  00FA               	movwf	UART_Init@x+1
  1308  0770  0870               	movf	?___aldiv,w
  1309  0771  00F9               	movwf	UART_Init@x
  1310  0772                     l1423:	
  1311                           
  1312                           ;./uart.h: 5:  if(x>255)
  1313  0772  3001               	movlw	1
  1314  0773  027A               	subwf	UART_Init@x+1,w
  1315  0774  3000               	movlw	0
  1316  0775  1903               	skipnz
  1317  0776  0279               	subwf	UART_Init@x,w
  1318  0777  1C03               	skipc
  1319  0778  2F7A               	goto	u841
  1320  0779  2F7B               	goto	u840
  1321  077A                     u841:	
  1322  077A  2FD7               	goto	l1429
  1323  077B                     u840:	
  1324  077B                     l1425:	
  1325                           
  1326                           ;./uart.h: 6:  {;./uart.h: 7:   x = (8000000 - baudrate*16)/(baudrate*16);
  1327  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1328  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1329  077D  0842               	movf	UART_Init@baudrate,w
  1330  077E  00C6               	movwf	??_UART_Init
  1331  077F  0843               	movf	UART_Init@baudrate+1,w
  1332  0780  00C7               	movwf	??_UART_Init+1
  1333  0781  0844               	movf	UART_Init@baudrate+2,w
  1334  0782  00C8               	movwf	??_UART_Init+2
  1335  0783  0845               	movf	UART_Init@baudrate+3,w
  1336  0784  00C9               	movwf	??_UART_Init+3
  1337  0785  3004               	movlw	4
  1338  0786                     u855:	
  1339  0786  1003               	clrc
  1340  0787  0DC6               	rlf	??_UART_Init,f
  1341  0788  0DC7               	rlf	??_UART_Init+1,f
  1342  0789  0DC8               	rlf	??_UART_Init+2,f
  1343  078A  0DC9               	rlf	??_UART_Init+3,f
  1344  078B                     u850:	
  1345  078B  3EFF               	addlw	-1
  1346  078C  1D03               	skipz
  1347  078D  2F86               	goto	u855
  1348  078E  0849               	movf	??_UART_Init+3,w
  1349  078F  00F3               	movwf	___aldiv@divisor+3
  1350  0790  0848               	movf	??_UART_Init+2,w
  1351  0791  00F2               	movwf	___aldiv@divisor+2
  1352  0792  0847               	movf	??_UART_Init+1,w
  1353  0793  00F1               	movwf	___aldiv@divisor+1
  1354  0794  0846               	movf	??_UART_Init,w
  1355  0795  00F0               	movwf	___aldiv@divisor
  1356  0796  0842               	movf	UART_Init@baudrate,w
  1357  0797  00CA               	movwf	??_UART_Init+4
  1358  0798  0843               	movf	UART_Init@baudrate+1,w
  1359  0799  00CB               	movwf	??_UART_Init+5
  1360  079A  0844               	movf	UART_Init@baudrate+2,w
  1361  079B  00CC               	movwf	??_UART_Init+6
  1362  079C  0845               	movf	UART_Init@baudrate+3,w
  1363  079D  00CD               	movwf	??_UART_Init+7
  1364  079E  3004               	movlw	4
  1365  079F                     u865:	
  1366  079F  1003               	clrc
  1367  07A0  0DCA               	rlf	??_UART_Init+4,f
  1368  07A1  0DCB               	rlf	??_UART_Init+5,f
  1369  07A2  0DCC               	rlf	??_UART_Init+6,f
  1370  07A3  0DCD               	rlf	??_UART_Init+7,f
  1371  07A4                     u860:	
  1372  07A4  3EFF               	addlw	-1
  1373  07A5  1D03               	skipz
  1374  07A6  2F9F               	goto	u865
  1375  07A7  3000               	movlw	0
  1376  07A8  00CE               	movwf	??_UART_Init+8
  1377  07A9  3012               	movlw	18
  1378  07AA  00CF               	movwf	??_UART_Init+9
  1379  07AB  307A               	movlw	122
  1380  07AC  00D0               	movwf	??_UART_Init+10
  1381  07AD  3000               	movlw	0
  1382  07AE  00D1               	movwf	??_UART_Init+11
  1383  07AF  084A               	movf	??_UART_Init+4,w
  1384  07B0  02CE               	subwf	??_UART_Init+8,f
  1385  07B1  084B               	movf	??_UART_Init+5,w
  1386  07B2  1C03               	skipc
  1387  07B3  0F4B               	incfsz	??_UART_Init+5,w
  1388  07B4  2FB6               	goto	u871
  1389  07B5  2FB7               	goto	u872
  1390  07B6                     u871:	
  1391  07B6  02CF               	subwf	??_UART_Init+9,f
  1392  07B7                     u872:	
  1393  07B7  084C               	movf	??_UART_Init+6,w
  1394  07B8  1C03               	skipc
  1395  07B9  0F4C               	incfsz	??_UART_Init+6,w
  1396  07BA  2FBC               	goto	u873
  1397  07BB  2FBD               	goto	u874
  1398  07BC                     u873:	
  1399  07BC  02D0               	subwf	??_UART_Init+10,f
  1400  07BD                     u874:	
  1401  07BD  084D               	movf	??_UART_Init+7,w
  1402  07BE  1C03               	skipc
  1403  07BF  0F4D               	incfsz	??_UART_Init+7,w
  1404  07C0  2FC2               	goto	u875
  1405  07C1  2FC3               	goto	u876
  1406  07C2                     u875:	
  1407  07C2  02D1               	subwf	??_UART_Init+11,f
  1408  07C3                     u876:	
  1409  07C3  0851               	movf	??_UART_Init+11,w
  1410  07C4  00F7               	movwf	___aldiv@dividend+3
  1411  07C5  0850               	movf	??_UART_Init+10,w
  1412  07C6  00F6               	movwf	___aldiv@dividend+2
  1413  07C7  084F               	movf	??_UART_Init+9,w
  1414  07C8  00F5               	movwf	___aldiv@dividend+1
  1415  07C9  084E               	movf	??_UART_Init+8,w
  1416  07CA  00F4               	movwf	___aldiv@dividend
  1417  07CB  120A  118A  25DA  120A  118A  	fcall	___aldiv
  1418  07D0  0871               	movf	?___aldiv+1,w
  1419  07D1  00FA               	movwf	UART_Init@x+1
  1420  07D2  0870               	movf	?___aldiv,w
  1421  07D3  00F9               	movwf	UART_Init@x
  1422  07D4                     l1427:	
  1423                           
  1424                           ;./uart.h: 8:   BRGH = 1;
  1425  07D4  1683               	bsf	3,5	;RP0=1, select bank1
  1426  07D5  1303               	bcf	3,6	;RP1=0, select bank1
  1427  07D6  1518               	bsf	24,2	;volatile
  1428  07D7                     l1429:	
  1429                           
  1430                           ;./uart.h: 10:  if(x<256)
  1431  07D7  3001               	movlw	1
  1432  07D8  027A               	subwf	UART_Init@x+1,w
  1433  07D9  3000               	movlw	0
  1434  07DA  1903               	skipnz
  1435  07DB  0279               	subwf	UART_Init@x,w
  1436  07DC  1803               	skipnc
  1437  07DD  2FDF               	goto	u881
  1438  07DE  2FE0               	goto	u880
  1439  07DF                     u881:	
  1440  07DF  2FF2               	goto	l43
  1441  07E0                     u880:	
  1442  07E0                     l1431:	
  1443                           
  1444                           ;./uart.h: 11:  {;./uart.h: 12:    SPBRG = x;
  1445  07E0  0879               	movf	UART_Init@x,w
  1446  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  1447  07E2  1303               	bcf	3,6	;RP1=0, select bank1
  1448  07E3  0099               	movwf	25	;volatile
  1449  07E4                     l1433:	
  1450                           
  1451                           ;./uart.h: 13:    SYNC = 0;
  1452  07E4  1218               	bcf	24,4	;volatile
  1453  07E5                     l1435:	
  1454                           
  1455                           ;./uart.h: 14:    SPEN = 1;
  1456  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1457  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1458  07E7  1798               	bsf	24,7	;volatile
  1459  07E8                     l1437:	
  1460                           
  1461                           ;./uart.h: 15:           TRISC7 = 1;
  1462  07E8  1683               	bsf	3,5	;RP0=1, select bank1
  1463  07E9  1303               	bcf	3,6	;RP1=0, select bank1
  1464  07EA  1787               	bsf	7,7	;volatile
  1465  07EB                     l1439:	
  1466                           
  1467                           ;./uart.h: 16:           TRISC6 = 1;
  1468  07EB  1707               	bsf	7,6	;volatile
  1469  07EC                     l1441:	
  1470                           
  1471                           ;./uart.h: 17:           CREN = 1;
  1472  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  1473  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  1474  07EE  1618               	bsf	24,4	;volatile
  1475  07EF                     l1443:	
  1476                           
  1477                           ;./uart.h: 18:           TXEN = 1;
  1478  07EF  1683               	bsf	3,5	;RP0=1, select bank1
  1479  07F0  1303               	bcf	3,6	;RP1=0, select bank1
  1480  07F1  1698               	bsf	24,5	;volatile
  1481  07F2                     l43:	
  1482  07F2  0008               	return
  1483  07F3                     __end_of_UART_Init:	
  1484                           
  1485                           	psect	text6
  1486  05DA                     __ptext6:	
  1487 ;; *************** function ___aldiv *****************
  1488 ;; Defined at:
  1489 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  divisor         4    0[COMMON] long 
  1492 ;;  dividend        4    4[COMMON] long 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  quotient        4    2[BANK0 ] long 
  1495 ;;  sign            1    1[BANK0 ] unsigned char 
  1496 ;;  counter         1    0[BANK0 ] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  4    0[COMMON] long 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1506 ;;      Params:         8       0       0       0       0
  1507 ;;      Locals:         0       6       0       0       0
  1508 ;;      Temps:          1       0       0       0       0
  1509 ;;      Totals:         9       6       0       0       0
  1510 ;;Total ram usage:       15 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_UART_Init
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           
  1520                           ;psect for function ___aldiv
  1521  05DA                     ___aldiv:	
  1522  05DA                     l1381:	
  1523                           ;incstack = 0
  1524                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1525                           
  1526  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1527  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1528  05DC  01BD               	clrf	___aldiv@sign
  1529  05DD                     l1383:	
  1530  05DD  1FF3               	btfss	___aldiv@divisor+3,7
  1531  05DE  2DE0               	goto	u711
  1532  05DF  2DE1               	goto	u710
  1533  05E0                     u711:	
  1534  05E0  2DEE               	goto	l408
  1535  05E1                     u710:	
  1536  05E1                     l1385:	
  1537  05E1  09F0               	comf	___aldiv@divisor,f
  1538  05E2  09F1               	comf	___aldiv@divisor+1,f
  1539  05E3  09F2               	comf	___aldiv@divisor+2,f
  1540  05E4  09F3               	comf	___aldiv@divisor+3,f
  1541  05E5  0AF0               	incf	___aldiv@divisor,f
  1542  05E6  1903               	skipnz
  1543  05E7  0AF1               	incf	___aldiv@divisor+1,f
  1544  05E8  1903               	skipnz
  1545  05E9  0AF2               	incf	___aldiv@divisor+2,f
  1546  05EA  1903               	skipnz
  1547  05EB  0AF3               	incf	___aldiv@divisor+3,f
  1548  05EC  01BD               	clrf	___aldiv@sign
  1549  05ED  0ABD               	incf	___aldiv@sign,f
  1550  05EE                     l408:	
  1551  05EE  1FF7               	btfss	___aldiv@dividend+3,7
  1552  05EF  2DF1               	goto	u721
  1553  05F0  2DF2               	goto	u720
  1554  05F1                     u721:	
  1555  05F1  2E01               	goto	l1391
  1556  05F2                     u720:	
  1557  05F2                     l1387:	
  1558  05F2  09F4               	comf	___aldiv@dividend,f
  1559  05F3  09F5               	comf	___aldiv@dividend+1,f
  1560  05F4  09F6               	comf	___aldiv@dividend+2,f
  1561  05F5  09F7               	comf	___aldiv@dividend+3,f
  1562  05F6  0AF4               	incf	___aldiv@dividend,f
  1563  05F7  1903               	skipnz
  1564  05F8  0AF5               	incf	___aldiv@dividend+1,f
  1565  05F9  1903               	skipnz
  1566  05FA  0AF6               	incf	___aldiv@dividend+2,f
  1567  05FB  1903               	skipnz
  1568  05FC  0AF7               	incf	___aldiv@dividend+3,f
  1569  05FD                     l1389:	
  1570  05FD  3001               	movlw	1
  1571  05FE  00F8               	movwf	??___aldiv
  1572  05FF  0878               	movf	??___aldiv,w
  1573  0600  06BD               	xorwf	___aldiv@sign,f
  1574  0601                     l1391:	
  1575  0601  3000               	movlw	0
  1576  0602  00C1               	movwf	___aldiv@quotient+3
  1577  0603  3000               	movlw	0
  1578  0604  00C0               	movwf	___aldiv@quotient+2
  1579  0605  3000               	movlw	0
  1580  0606  00BF               	movwf	___aldiv@quotient+1
  1581  0607  3000               	movlw	0
  1582  0608  00BE               	movwf	___aldiv@quotient
  1583  0609                     l1393:	
  1584  0609  0873               	movf	___aldiv@divisor+3,w
  1585  060A  0472               	iorwf	___aldiv@divisor+2,w
  1586  060B  0471               	iorwf	___aldiv@divisor+1,w
  1587  060C  0470               	iorwf	___aldiv@divisor,w
  1588  060D  1903               	skipnz
  1589  060E  2E10               	goto	u731
  1590  060F  2E11               	goto	u730
  1591  0610                     u731:	
  1592  0610  2E5E               	goto	l1413
  1593  0611                     u730:	
  1594  0611                     l1395:	
  1595  0611  01BC               	clrf	___aldiv@counter
  1596  0612  0ABC               	incf	___aldiv@counter,f
  1597  0613  2E21               	goto	l1399
  1598  0614                     l1397:	
  1599  0614  3001               	movlw	1
  1600  0615  00F8               	movwf	??___aldiv
  1601  0616                     u745:	
  1602  0616  1003               	clrc
  1603  0617  0DF0               	rlf	___aldiv@divisor,f
  1604  0618  0DF1               	rlf	___aldiv@divisor+1,f
  1605  0619  0DF2               	rlf	___aldiv@divisor+2,f
  1606  061A  0DF3               	rlf	___aldiv@divisor+3,f
  1607  061B  0BF8               	decfsz	??___aldiv,f
  1608  061C  2E16               	goto	u745
  1609  061D  3001               	movlw	1
  1610  061E  00F8               	movwf	??___aldiv
  1611  061F  0878               	movf	??___aldiv,w
  1612  0620  07BC               	addwf	___aldiv@counter,f
  1613  0621                     l1399:	
  1614  0621  1FF3               	btfss	___aldiv@divisor+3,7
  1615  0622  2E24               	goto	u751
  1616  0623  2E25               	goto	u750
  1617  0624                     u751:	
  1618  0624  2E14               	goto	l1397
  1619  0625                     u750:	
  1620  0625                     l1401:	
  1621  0625  3001               	movlw	1
  1622  0626  00F8               	movwf	??___aldiv
  1623  0627                     u765:	
  1624  0627  1003               	clrc
  1625  0628  0DBE               	rlf	___aldiv@quotient,f
  1626  0629  0DBF               	rlf	___aldiv@quotient+1,f
  1627  062A  0DC0               	rlf	___aldiv@quotient+2,f
  1628  062B  0DC1               	rlf	___aldiv@quotient+3,f
  1629  062C  0BF8               	decfsz	??___aldiv,f
  1630  062D  2E27               	goto	u765
  1631  062E                     l1403:	
  1632  062E  0873               	movf	___aldiv@divisor+3,w
  1633  062F  0277               	subwf	___aldiv@dividend+3,w
  1634  0630  1D03               	skipz
  1635  0631  2E3C               	goto	u775
  1636  0632  0872               	movf	___aldiv@divisor+2,w
  1637  0633  0276               	subwf	___aldiv@dividend+2,w
  1638  0634  1D03               	skipz
  1639  0635  2E3C               	goto	u775
  1640  0636  0871               	movf	___aldiv@divisor+1,w
  1641  0637  0275               	subwf	___aldiv@dividend+1,w
  1642  0638  1D03               	skipz
  1643  0639  2E3C               	goto	u775
  1644  063A  0870               	movf	___aldiv@divisor,w
  1645  063B  0274               	subwf	___aldiv@dividend,w
  1646  063C                     u775:	
  1647  063C  1C03               	skipc
  1648  063D  2E3F               	goto	u771
  1649  063E  2E40               	goto	u770
  1650  063F                     u771:	
  1651  063F  2E4F               	goto	l1409
  1652  0640                     u770:	
  1653  0640                     l1405:	
  1654  0640  0870               	movf	___aldiv@divisor,w
  1655  0641  02F4               	subwf	___aldiv@dividend,f
  1656  0642  0871               	movf	___aldiv@divisor+1,w
  1657  0643  1C03               	skipc
  1658  0644  0F71               	incfsz	___aldiv@divisor+1,w
  1659  0645  02F5               	subwf	___aldiv@dividend+1,f
  1660  0646  0872               	movf	___aldiv@divisor+2,w
  1661  0647  1C03               	skipc
  1662  0648  0F72               	incfsz	___aldiv@divisor+2,w
  1663  0649  02F6               	subwf	___aldiv@dividend+2,f
  1664  064A  0873               	movf	___aldiv@divisor+3,w
  1665  064B  1C03               	skipc
  1666  064C  0F73               	incfsz	___aldiv@divisor+3,w
  1667  064D  02F7               	subwf	___aldiv@dividend+3,f
  1668  064E                     l1407:	
  1669  064E  143E               	bsf	___aldiv@quotient,0
  1670  064F                     l1409:	
  1671  064F  3001               	movlw	1
  1672  0650                     u785:	
  1673  0650  1003               	clrc
  1674  0651  0CF3               	rrf	___aldiv@divisor+3,f
  1675  0652  0CF2               	rrf	___aldiv@divisor+2,f
  1676  0653  0CF1               	rrf	___aldiv@divisor+1,f
  1677  0654  0CF0               	rrf	___aldiv@divisor,f
  1678  0655  3EFF               	addlw	-1
  1679  0656  1D03               	skipz
  1680  0657  2E50               	goto	u785
  1681  0658                     l1411:	
  1682  0658  3001               	movlw	1
  1683  0659  02BC               	subwf	___aldiv@counter,f
  1684  065A  1D03               	btfss	3,2
  1685  065B  2E5D               	goto	u791
  1686  065C  2E5E               	goto	u790
  1687  065D                     u791:	
  1688  065D  2E25               	goto	l1401
  1689  065E                     u790:	
  1690  065E                     l1413:	
  1691  065E  083D               	movf	___aldiv@sign,w
  1692  065F  1903               	btfsc	3,2
  1693  0660  2E62               	goto	u801
  1694  0661  2E63               	goto	u800
  1695  0662                     u801:	
  1696  0662  2E6E               	goto	l1417
  1697  0663                     u800:	
  1698  0663                     l1415:	
  1699  0663  09BE               	comf	___aldiv@quotient,f
  1700  0664  09BF               	comf	___aldiv@quotient+1,f
  1701  0665  09C0               	comf	___aldiv@quotient+2,f
  1702  0666  09C1               	comf	___aldiv@quotient+3,f
  1703  0667  0ABE               	incf	___aldiv@quotient,f
  1704  0668  1903               	skipnz
  1705  0669  0ABF               	incf	___aldiv@quotient+1,f
  1706  066A  1903               	skipnz
  1707  066B  0AC0               	incf	___aldiv@quotient+2,f
  1708  066C  1903               	skipnz
  1709  066D  0AC1               	incf	___aldiv@quotient+3,f
  1710  066E                     l1417:	
  1711  066E  0841               	movf	___aldiv@quotient+3,w
  1712  066F  00F3               	movwf	?___aldiv+3
  1713  0670  0840               	movf	___aldiv@quotient+2,w
  1714  0671  00F2               	movwf	?___aldiv+2
  1715  0672  083F               	movf	___aldiv@quotient+1,w
  1716  0673  00F1               	movwf	?___aldiv+1
  1717  0674  083E               	movf	___aldiv@quotient,w
  1718  0675  00F0               	movwf	?___aldiv
  1719  0676                     l418:	
  1720  0676  0008               	return
  1721  0677                     __end_of___aldiv:	
  1722                           
  1723                           	psect	text7
  1724  0594                     __ptext7:	
  1725 ;; *************** function _UART_Data_Ready *****************
  1726 ;; Defined at:
  1727 ;;		line 29 in file "./uart.h"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      unsigned char 
  1734 ;; Registers used:
  1735 ;;		wreg
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         0       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0
  1744 ;;      Totals:         0       0       0       0       0
  1745 ;;Total ram usage:        0 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function _UART_Data_Ready
  1756  0594                     _UART_Data_Ready:	
  1757  0594                     l1447:	
  1758                           ;incstack = 0
  1759                           ; Regs used in _UART_Data_Ready: [wreg]
  1760                           
  1761                           
  1762                           ;./uart.h: 31:    return RCIF;
  1763  0594  3000               	movlw	0
  1764  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0597  1A8C               	btfsc	12,5	;volatile
  1767  0598  3001               	movlw	1
  1768  0599                     l49:	
  1769  0599  0008               	return
  1770  059A                     __end_of_UART_Data_Ready:	
  1771  007E                     btemp	set	126	;btemp
  1772  007E                     wtemp0	set	126


Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Init
    _setup->_spiInit
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1218
                                             11 COMMON     3     3      0
                    _UART_Data_Ready
                          _UART_Init
                          _UART_Read
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_Init
     ___aldiv
   _UART_Read
   _setup
     _spiInit
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      40       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      32       5       62.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      40      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon May 11 21:45:16 2020

                       _a 003A                         _b 0030                         pc 0002  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l43 07F2  
                      l52 05A0                        l55 05A7                        l49 0599  
                      l88 05C3                        l98 06F7                        fsr 0004  
                     l240 05D9                       l239 05D4                       l408 05EE  
                     l249 059F                       l418 0676              __CFG_CPD$OFF 0000  
                     u710 05E1                       u711 05E0                       u800 0663  
                     u720 05F2                       u801 0662                       u721 05F1  
                     u730 0611                       u810 0729                       u731 0610  
                     u820 0742                       u750 0625                       u670 05CC  
                     u910 0699                       u751 0624                       u831 0754  
                     u815 0724                       u671 05CB                       u911 0698  
                     u840 077B                       u832 0755                       u920 06BB  
                     u745 0616                       u841 077A                       u833 075A  
                     u825 073D                       u921 06BA                       u770 0640  
                     u850 078B                       u834 075B                       u930 06CC  
                     u771 063F                       u835 0760                       u931 06CB  
                     u860 07A4                       u836 0761                       u940 06DE  
                     u765 0627                       u941 06DD                       u790 065E  
                     u950 06F0                       u791 065D                       u775 063C  
                     u871 07B6                       u855 0786                       u951 06EF  
                     u880 07E0                       u872 07B7                       u785 0650  
                     u881 07DF                       u873 07BC                       u865 079F  
                     u874 07BD                       u890 05A6                       _POT 0038  
                     u875 07C2                       u891 05A5                       u876 07C3  
                     _dms 002E                       _dus 002C                       indf 0000  
            __CFG_LVP$OFF 0000                      l1401 0625                      l1411 0658  
                    l1403 062E                      l1405 0640                      l1413 065E  
                    l1421 0719                      l1415 0663                      l1407 064E  
                    l1431 07E0                      l1423 0772                      l1351 05D3  
                    l1343 05C5                      l1511 06A6                      l1503 0677  
                    l1417 066E                      l1409 064F                      l1441 07EC  
                    l1433 07E4                      l1425 077B                      l1345 05CC  
                    l1521 06D7                      l1513 06B3                      l1505 068B  
                    l1443 07EF                      l1435 07E5                      l1427 07D4  
                    l1451 05A0                      l1347 05CE                      l1523 06DE  
                    l1531 06F7                      l1515 06BB                      l1507 068F  
                    l1381 05DA                      l1437 07E8                      l1429 07D7  
                    l1453 05A6                      l1349 05D0                      l1461 05B7  
                    l1533 06F8                      l1525 06E9                      l1517 06C6  
                    l1509 0699                      l1447 0594                      l1391 0601  
                    l1383 05DD                      l1439 07EB                      l1463 05BA  
                    l1535 0701                      l1527 06F0                      l1519 06CC  
                    l1393 0609                      l1385 05E1                      l1457 05B0  
                    l1465 059B                      l1537 0709                      l1529 06F4  
                    l1395 0611                      l1387 05F2                      l1459 05B4  
                    l1539 0712                      l1397 0614                      l1389 05FD  
                    l1399 0621                      STR_1 0009                      STR_2 000F  
                    STR_3 0015                      STR_4 001B                      STR_5 0021  
                    STR_6 0027                      STR_7 002D                      STR_8 0033  
                    STR_9 0036                      _BRGH 04C2                      _CREN 00C4  
                    _CONT 0034                      u1477 06AC                      u1487 06FC  
                    u1497 070D                      _FOTO 0036                      _RCIF 0065  
                    _SPEN 00C7                      _OTRO 0032                      _TRMT 04C1  
                    _TXEN 04C5                      _SYNC 04C4              __CFG_WRT$OFF 0000  
                    _main 0677                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 0000             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
         __end_of___aldiv 0677                     ?_main 0070                     STR_10 0039  
                   STR_11 000C                     STR_12 0012                     STR_13 0018  
                   STR_14 001E                     STR_15 0024                     STR_16 002A  
                   STR_17 0030             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _RCREG 001A                     _SPBRG 0099                     _PORTB 0006  
                   _TRISB 0086                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
      __size_of_UART_Init 00DA        __size_of_UART_Read 0008                     _setup 05B0  
                   pclath 000A           __end_of_spiInit 05DA                     status 0003  
                   wtemp0 007E           __initialization 07F3              __end_of_main 0719  
                  ??_main 007B                    ?_setup 0070                    _ANSELH 0189  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC5 043D  
                  _TRISC6 043E                    _TRISC7 043F                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000         __end_of_UART_Init 07F3  
       __end_of_UART_Read 05A8                 ??___aldiv 0078          __end_of_spiWrite 05A0  
               ??_spiInit 0073   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 05C4                   ??_setup 0074                __pbssBANK0 0020  
__size_of_UART_Data_Ready 0006                __pmaintext 0677                   _SSPSTAT 0094  
              __stringtab 0003                 ?_spiWrite 0070                   ___aldiv 05DA  
                 __ptext1 059A                   __ptext2 05B0                   __ptext3 05C4  
                 __ptext4 05A0                   __ptext5 0719                   __ptext6 05DA  
                 __ptext7 0594          ___aldiv@dividend 0074                   _spiInit 05C4  
                 clrloop0 05A9      end_of_initialization 07FC          ___aldiv@quotient 003E  
              ??_spiWrite 0070         ??_UART_Data_Ready 0070                 _UART_Init 0719  
               _UART_Read 05A0                 _PORTCbits 0007                 _PORTDbits 0008  
               _TRISDbits 0088               spiWrite@dat 0070                ?_UART_Init 0042  
              ?_UART_Read 0070       start_initialization 07F3        POTENCIOMETRO@F1348 0026  
               ___latbits 0002             __pcstackBANK0 003C    __CFG_FOSC$INTRC_CLKOUT 0000  
          FOTORESIS@F1358 0020                  ?___aldiv 0070               ??_UART_Init 0046  
             ??_UART_Read 0070         __size_of_spiWrite 0006                 __pstrings 0003  
                ?_spiInit 0070                UART_Init@x 0079            __size_of_setup 0014  
         ___aldiv@divisor 0070      spiInit@sTransmitEdge 0072           ___aldiv@counter 003C  
         _UART_Data_Ready 0594                 clear_ram0 05A8        spiInit@sDataSample 0070  
       UART_Init@baudrate 0042               __stringbase 0008          __size_of___aldiv 009D  
      __end_of__stringtab 0009   __end_of_UART_Data_Ready 059A          __size_of_spiInit 0016  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 00A2                  _spiWrite 059A  
            spiInit@sType 0073         spiInit@sClockIdle 0071                 stringcode 0003  
                stringdir 0003                  stringtab 0003              ___aldiv@sign 003D  
        ?_UART_Data_Ready 0070  
